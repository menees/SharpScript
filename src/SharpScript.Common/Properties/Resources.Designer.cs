//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharpScript.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SharpScript.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;About....
        /// </summary>
        internal static string AboutMenuItem {
            get {
                return ResourceManager.GetString("AboutMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attach Debugger.
        /// </summary>
        internal static string AttachDebuggerMenuItem {
            get {
                return ResourceManager.GetString("AttachDebuggerMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Break In Debugger.
        /// </summary>
        internal static string BreakInDebuggerMenuItem {
            get {
                return ResourceManager.GetString("BreakInDebuggerMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel execution of the script?
        ///
        ///It may take several seconds..
        /// </summary>
        internal static string CancelExecution {
            get {
                return ResourceManager.GetString("CancelExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Cancel Execution....
        /// </summary>
        internal static string CancelExecutionMenuItem {
            get {
                return ResourceManager.GetString("CancelExecutionMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compile Errors.
        /// </summary>
        internal static string CompileErrors {
            get {
                return ResourceManager.GetString("CompileErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load type library {0}..
        /// </summary>
        internal static string FailedLoadTypeLib {
            get {
                return ResourceManager.GetString("FailedLoadTypeLib", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified script file does not exist: {0}.
        /// </summary>
        internal static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Help....
        /// </summary>
        internal static string HelpMenuItem {
            get {
                return ResourceManager.GetString("HelpMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line {0}: A #compiler directive must specify one of: {1}..
        /// </summary>
        internal static string InvalidCompilerReference {
            get {
                return ResourceManager.GetString("InvalidCompilerReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line {0}: A #com_reference directive must specify a type library or DLL file name..
        /// </summary>
        internal static string InvalidScriptComReference {
            get {
                return ResourceManager.GetString("InvalidScriptComReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line {0}: A #debug directive should not specify any arguments..
        /// </summary>
        internal static string InvalidScriptDebugDirective {
            get {
                return ResourceManager.GetString("InvalidScriptDebugDirective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line {0}: A #reference directive must specify an assembly file name..
        /// </summary>
        internal static string InvalidScriptReference {
            get {
                return ResourceManager.GetString("InvalidScriptReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line {0}, Character {1}: .
        /// </summary>
        internal static string LineCharacter {
            get {
                return ResourceManager.GetString("LineCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line {0}: .
        /// </summary>
        internal static string LinePrefix {
            get {
                return ResourceManager.GetString("LinePrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: If the errors are due to language features introduced via Roslyn (e.g., C#6/VB14 or later), then add a #compiler Roslyn directive at the top of the script..
        /// </summary>
        internal static string TryRoslyn {
            get {
                return ResourceManager.GetString("TryRoslyn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extension &quot;{0}&quot; does not map to a known script type provider..
        /// </summary>
        internal static string UnsupportedExtension {
            get {
                return ResourceManager.GetString("UnsupportedExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage: {0} ScriptFileName [Options...] [ScriptArgs...]
        ///
        ///Options:
        /////D	Generate debug information for the script.
        /////Q	Quiet mode.  The GUI version won&apos;t show a system tray icon.
        /////T:nn	Time out in seconds.  Maximum time a script can run..
        /// </summary>
        internal static string Usage {
            get {
                return ResourceManager.GetString("Usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Y.
        /// </summary>
        internal static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Press Y or N then Enter).
        /// </summary>
        internal static string YesNoPrompt {
            get {
                return ResourceManager.GetString("YesNoPrompt", resourceCulture);
            }
        }
    }
}
